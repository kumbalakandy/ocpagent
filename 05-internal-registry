apiVersion: objectbucket.io/v1alpha1
kind: ObjectBucketClaim
metadata:
  name: registry-bucket
  namespace: openshift-storage
spec:
  storageClassName: ocs-storagecluster-ceph-rgw
  generateBucketName: registry-bucket
  additionalConfig:   
    maxSize: "100G"



bucket_name=$(oc get obc -n openshift-storage registry-bucket -o jsonpath='{.spec.bucketName}') 


AWS_ACCESS_KEY_ID=$(oc get secret -n openshift-storage registry-bucket -o jsonpath='{.data.AWS_ACCESS_KEY_ID}' | base64 --decode)


AWS_SECRET_ACCESS_KEY=$(oc get secret -n openshift-storage registry-bucket -o jsonpath='{.data.AWS_SECRET_ACCESS_KEY}' | base64 --decode)

oc create secret generic image-registry-private-configuration-user --from-literal=REGISTRY_STORAGE_S3_ACCESSKEY=${AWS_ACCESS_KEY_ID} --from-literal=REGISTRY_STORAGE_S3_SECRETKEY=${AWS_SECRET_ACCESS_KEY} --namespace openshift-image-registry


route_host=$(oc get route ocs-storagecluster-cephobjectstore -n openshift-storage --template='{{ .spec.host }}')


oc extract secret/$(oc get ingresscontroller -n openshift-ingress-operator default -o json | jq '.spec.defaultCertificate.name // "router-certs-default"' -r) -n openshift-ingress --confirm


oc create configmap image-registry-s3-bundle --from-file=ca-bundle.crt=./tls.crt  -n openshift-config


oc patch config.image/cluster -p '{"spec":{"managementState":"Managed","replicas":2,"storage":{"managementState":"Unmanaged","s3":{"bucket":'\"${bucket_name}\"',"region":"us-east-1","regionEndpoint":'\"https://${route_host}\"',"virtualHostedStyle":false,"encrypt":false,"trustedCA":{"name":"image-registry-s3-bundle"}}}}}' --type=merge


apiVersion: objectbucket.io/v1alpha1
kind: ObjectBucketClaim  
metadata:  
  name: <obc name>  
  namespace: <namespace>  
spec:  
  bucketName:  <name of the backend bucket>  
  storageClassName: <name of storage class>  
  additionalConfig:   
    maxObjects: "1000" # sets limit on no of objects this obc can hold  
    maxSize: "2G" # sets max limit for the size of data this obc can hold  
